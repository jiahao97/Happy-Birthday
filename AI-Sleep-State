using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using stateStuff;

public class SleepState : State<AI>
{
    private static SleepState _instance;
    private bool reset;

    private SleepState()
    {
        if (_instance != null)
        {
            return;
        }
        _instance = this;

    }

    public static SleepState Instance
    {
        get
        {
            if (_instance == null)
            {
                new SleepState();
            }

            return _instance;
        }
    }

    public override void EnterState(AI _owner)
    {

        EnemyManager.AIState.Add(AI.AIState.Sleep);
        _owner.currentState = AI.AIState.Sleep;                             // change the current state to sleep state

        _owner._ragDoll.gameObject.SetActive(true);                     //active the ragdoll
        _owner._animatedModel.gameObject.SetActive(false);              // deactive the game object
        _owner.anim.SetTrigger("FaceDown");                            // trigger lay down Animation
    }

    public override void ExitState(AI _owner)
    {
        EnemyManager.AIState.Remove(AI.AIState.Sleep);

        if (_owner.agent.isActiveAndEnabled)
        {
            _owner.agent.isStopped = false;                    // let the Mannequin to Move Around
        }
       
    }

    public override void UpdateState(AI _owner)
    {
        _owner.agent.isStopped = true;
        
        _owner.resettingRagdoll.GetChildPositions();

    }






}

